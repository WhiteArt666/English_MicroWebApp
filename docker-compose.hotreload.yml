# version: '3.8'

services:
  # Service Discovery (Eureka)
  eureka-server:
    image: steeltoeoss/eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    networks:
      - english-adventure-network

  # MySQL Database
  mysql-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: english_adventure_users
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - english-adventure-network

  # User Service với volume mapping cho hot reload
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/english_adventure_users
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./backend/user-service/src:/app/src
      - ./backend/user-service/target:/app/target
    depends_on:
      - mysql-db
      - eureka-server
    networks:
      - english-adventure-network

  # Game Service với volume mapping
  game-service:
    build:
      context: ./backend/game-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/english_adventure_game
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./backend/game-service/src:/app/src
      - ./backend/game-service/target:/app/target
    depends_on:
      - mysql-db
      - eureka-server
    networks:
      - english-adventure-network

  # Learning Service với volume mapping
  learning-service:
    build:
      context: ./backend/learning-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - DATABASE_URL=sqlite:///./learning.db
    volumes:
      - ./backend/learning-service:/app
    networks:
      - english-adventure-network

volumes:
  mysql_data:

networks:
  english-adventure-network:
    driver: bridge
